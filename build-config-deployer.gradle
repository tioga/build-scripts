apply plugin: "maven"
apply plugin: "signing"

uploadArchives.dependsOn install

signing {
  sign configurations.archives
}

task (uploadArchivesTest) << {
  try {
    def group = project.group.replace(".", "/")
    new URL("https://repo1.maven.org/maven2/$group/$project.name/$project.version/").getText()
    println("*EXISTING*   $project.group:$project.name:$project.version");
  } catch (FileNotFoundException ignored) {
    println("Not Found: $project.group:$project.name:$project.version");
  }
}

uploadArchives {
  doFirst() {
    try {
      def group = project.group.replace(".", "/")
      new URL("https://repo1.maven.org/maven2/$group/$project.name/$project.version/").getText()
      throw new StopExecutionException("The distribution $project.group:$project.name:$project.version already exists.");
    } catch (FileNotFoundException ignored) {/* It's OK to deploy */}
  }
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: sonatypeUsername, password: sonatypePassword)
      }

      pom.groupId = project.group
      pom.artifactId = project.name
      pom.version = project.version
      pom.packaging = 'jar'
      pom.project {
        name = project.name
        description = "Push Server"
        url = 'http://www.cosmicpush.com'
        licenses {
          license {
            name = 'Apache License, Version 2.0'
            url = 'http://www.apache.org/licenses/LICENSE-2.0'
            distribution = 'repo'
          }
        }
        scm {
            url = 'https://github.com/cosmic-push'
            connection = 'https://github.com/cosmic-push/push-server.git'
        }
        developers {
            developer {
                id = 'SireInsectus'
                name = 'Jacob D. Parr'
                email = 'jacob.parr@gmail.com'
            }
        }
      }
    }
  }
}
